* 소프트웨어 생명주기(Software Life Cycle)
  - 소프트웨어 개발 방법론.
    (소프트웨어 개발 방법론 : 소프트웨어 개발 및 유지보수 등에 필요한 여러가지 작업들의 수행방법과 효율적 수행을 위한 각종 기법 및 도구를 체계적으로 정리 및 표준화한 것을 의미.)
  - 소프트웨어 개발단계와 각 단계별 주요활동, 활동 결과(산출물)로 표현.
  - 소프트웨어 생명주기 모형 종류 : 폭포수 모형, 프로토타입 모형, 나선형 모형, 애자일 모형

  1. 폭포수 모형(=고전적 생명주기모형)
    - 소프트웨어 개발 시, 이전 단계로 되돌아가기 불가능.
      => 각 단계를 확실히 매듭지어 그 결과를 철저하게 검토 및 승인한 후, 다음 단계 진행하는 개발방법론
    - 소프트웨어 공학에서 가장 오래됨. 폭 넓게 사용된 전통적 소프트웨어.
    - 선형 순차적 모형 : 한 단계가 끝나야만 다음 단계 넘어가기 가능.
    - 모형 적용 경험과 성공 사례가 많음.
    - 제품 일부가 될 매뉴얼작성 필요
    - 각 단계 종료 후 다음단계 수행 위한 결과물 명확히 필요.
    - 두 개 이상의 과정이 병행 및 수행되지 않음.
    - 단계 : 타당성 검토 - 계획 - 요구분석 - 설계 구현 - 시험 - 유지보수
    
  2. 프로토타입 모형(=원형 모형)
    - 사용자 요구사항을 명확히 파악하기 위해 시제품을 만들어 최종 결과물 예측하는 모형
    - 시제품 통해 개발자 및 의뢰조 모두에게 참조모델이 됨.
    - 새로운 요구사항 도출될 때, 그것을 반영한 프로토타입 새롭게 만듦
    - 단기간 제작을 목적으로 둠. 이로 인해 비효율적 언어 및 알고리즘 사용 우려.
    - 단계 : 요구 수집 - 빠른 설계 - 프로토타입구축 - 고객평가 - 프로토타입 조정 - 구현
    
  3. 나선형 모형(=점진적 모형)
    - 보헴이 제안한 모형. 
    - 폭포수 + 프로토타입 모형의 장점 강화
    - 목적 : 소프트웨어 개발하면서 발생할 수 있는 위험을 관리 및 최소화
    - 핵심 기술에 문제 있거나, 사용자 요구사항을 이해하기 어려운 경우에 적합한 모델
    - 점진적인 개발과정의 반복.(누락, 추가된 요구사항을 첨가할 수 있기에 유지보수 과정 불필요)
    - 단계 : 계획수립 - 위험분석 - 개발 및 검증 - 고객평가 루틴

  4. 애자일모형
    - 고객 요구사항 변화에 유연하게 대응할 수 있도록 일정한 주기를 반복하며 개발과정 진행
    - 좋은 걸 빠르고 낭비없게 만들기 위해, 고객과의 소통에 초점을 둠
    - 스프린트, 이터레이션이라 칭하는 개발주기 반복.
    - 반복주기마다 만들어지는 결과물에 대한 고객의 평가와 요구를 적극 수용함.
    - 각 개발주기에서 고객의 요구사항에 우선순위 부여해 개발 작업에 반영
    - 해당 개발 모형 : 스크럼, 칸반, lean, 크리스탈, 기능중심개발(FDD), DSDM(역동시스템 개발메서드), DAD
    1) 핵심가치
      - 개인과 상호작용에 가치를 둠(프로세스와 도구X)
      - 실행되는 SW에 가치를 둠(문서X)
      - 고객과의 협업에 가치를 둠(계약협상X)
      - 변화에 반응하는 걸 가치를 둠
